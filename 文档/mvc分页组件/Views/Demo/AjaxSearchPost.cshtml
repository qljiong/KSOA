@model PagedList<Article>
@{
    ViewBag.Title = "AjaxForm搜索（Post）";
}

<h2>AjaxForm搜索（Post）</h2>
<div class="description">该示例演示如何在Ajax分页模式下，在分页时通过Post方式提交查询表单，从而实现按条件搜索显示数据的功能。本示例使用Unobtrusive Ajax Form，因此需引入jquery.unobtrusive-ajax脚本库。
    <div class="emph">该功能通过设置MvcAjaxOptions的DataFormId属性为要提交的表单的ID即可。
    用户点击提交按钮进行查询时，MvcPager会将查询条件保存在客户端脚本变量中，每次分页时自动将该查询条件发送回服务器端，开发人员只需实现服务器端查询功能，无需编写任何客户端代码。</div>
</div>
<fieldset><legend>查询</legend>
@using (Ajax.BeginForm("AjaxSearchPost", new RouteValueDictionary { { "id", "" } }, new AjaxOptions { UpdateTargetId = "articles", InsertionMode = InsertionMode.Replace }, new RouteValueDictionary { { "id", "searchForm" } }))
{
    <span>标题：</span><input type="text" name="title"  id="title" style="width:120px"/>
    <span>作者：</span><input type="text" name="author" id="author" style="width:120px"/><span>（测试：Webdiyer）</span>
    <span>来源：</span><input type="text" name="source" id="source" style="width:120px"/><span>（测试：吴起热线）</span>
    <input type="submit" value="搜索(S)" accesskey="S"/>
}
    </fieldset>
<div id="articles">
    @Html.Partial("_AjaxSearchPost",Model)
</div>


@section Scripts
{
    @{Html.RegisterMvcPagerScriptResource();}
<script type="text/javascript" src="/Scripts/jquery.unobtrusive-ajax.min.js"></script>}
